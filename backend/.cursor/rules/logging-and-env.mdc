---
alwaysApply: true
description: Use central logger and load environment variables from configs
globs: *.py
---

### Centralized logging

- Use the logger from `src.utils.logger`.
- Create named loggers: `from src.utils.logger import get_logger`; then `logger = get_logger(__name__)`.
- Log messages with standard Python formatting (no `{}` placeholders); e.g., `logger.info(f"Processed {n} items")`.

### Environment variables

- Env values are in `backend/configs/.env` and secrets in `backend/configs/secrets/` (env-style files).
- Load via `python-dotenv` or Pydantic Settings as appropriate.
- The module `src/utils/logger.py` already loads `configs/.env` for logging config; avoid duplicating loading unless needed.

